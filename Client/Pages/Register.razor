@inherits CommonComponentBase
@page "/register"
@inject IAuthService AuthService
@attribute [Authorize(Roles = Roles.Admin)]

<PageTitle>Új felhasználó regisztrálása</PageTitle>

<div class="mask d-flex align-items-center h-100 gradient-custom-3">
    <div class="container h-100">
        <div class="row d-flex justify-content-center align-items-center h-100">
            <div class="col-12 col-md-9 col-lg-7 col-xl-6">
                <div class="card" style="border-radius: 15px;">
                    <div class="card-body p-5">
                        <h2 class="text-uppercase text-center mb-4">Új felhasználó regisztrálása</h2>
                        <EditForm Model="user" OnValidSubmit="HandleRegistration">
                            <DataAnnotationsValidator />
                            <div class="form-outline mb-4">
                                <label class="form-label" for="username">Felhasználónév</label>
                                <InputText id="username" @bind-Value="user.Username" class="form-control form-control-lg" />
                                <ValidationMessage For="@(() => user.Username)" />
                            </div>

                            <div class="form-outline mb-4">
                                <label class="form-label" for="email">Email</label>
                                <InputText id="email" @bind-Value="user.Email" class="form-control form-control-lg" type="email" @onblur="OnEmailBlur" />
                                <ValidationMessage For="@(() => user.Email)" />
                            </div>

                            <div class="form-outline mb-4">
                                <label class="form-label" for="neptuncode">Neptunkód</label>
                                <InputText id="neptuncode" @bind-Value="user.NeptunCode" class="form-control form-control-lg" />
                                <ValidationMessage For="@(() => user.NeptunCode)" />
                            </div>

                            <div class="form-outline mb-4">
                                <label class="form-label" for="uid">Ldap UID</label>
                                <InputText id="uid" @bind-Value="user.LdapUid" class="form-control form-control-lg" disabled="true" />
                                @if (string.IsNullOrEmpty(user.LdapUid))
                                {
                                    <p class="text-center text-muted">
                                        <a @onclick='() => OnEmailBlur(null)' style="cursor: pointer;" class="fw-bold text-body">
                                            <u>LDAP UID lekérése</u>
                                        </a>
                                    </p>
                                }
                            </div>

                            <div class="form-outline mb-4">
                                <label class="form-label" for="password">Jelszó</label>
                                <InputText id="password" @bind-Value="user.Password" class="form-control form-control-lg" type="password" />
                                <ValidationMessage For="@(() => user.Password)" />
                            </div>

                            <div class="form-outline mb-5">
                                <label class="form-label" for="confirmPassword">Jelszó megerősítése</label>
                                <InputText id="confirmPassword" @bind-Value="user.ConfirmPassword" class="form-control form-control-lg" type="password" />
                                <ValidationMessage For="@(() => user.ConfirmPassword)" />
                            </div>

                            <div class="d-flex justify-content-center mt-4">
                                <button type="submit"
                                        class="btn btn-success btn-block btn-lg gradient-custom-4 text-white form-control form-control-lg">
                                    Regisztrál
                                </button>
                            </div>

                            <p class="text-center text-muted mt-5">
                                <a @onclick='() => NavigateBack("/instructors")' class="fw-bold text-body"><u>Vissza</u></a>
                            </p>
                        </EditForm>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    UserRegisterDto user = new UserRegisterDto();

    async Task OnEmailBlur(FocusEventArgs evt)
    {
        if (!string.IsNullOrEmpty(user.Email))
        {
            var result = await AuthService.GetUserLdapUid(user.Email);
            if (result != null && result.Success)
            {
                user.LdapUid = result.Data ?? "";
            }
        }
    }

    async Task HandleRegistration()
    {
        var result = await AuthService.Register(user);
        if (result != null)
        {
            if (result.Success)
            {
                ShowToast("Sikeres regisztráció", "A felhasználó bekerült az adatbázisba", ToastType.Success);
                NavigateBack();
            }
            else
            {
                ShowToast("Sikertelen regisztráció", result.Message! , ToastType.Warning);
            }
        }
        else
        {
            ShowToast(Messages.Error, Messages.RequestFailed, ToastType.Danger);
        }
    }
}
